function blk = blockMaps(mapnum)
%idea:  we will save files as Map##Alg##Sec##Nodes######.mat
if mapnum == 1
    blk=uint8([1,1,1,1,1,1,1 %14 blanks, 970 nodes
        1,0,0,0,0,1,1
        1,0,1,1,1,1,1
        1,0,0,0,0,1,1
        1,1,1,1,0,1,1
        1,0,0,0,0,1,1
        1,1,1,1,1,1,1]);
elseif mapnum==2
    blk=uint8([1,1,1,1,1,1,1 %18 blanks, 2080 nodes
        1,1,1,0,0,0,1
        1,0,0,0,0,0,1
        1,0,0,1,0,0,1
        1,1,0,1,0,0,1
        1,1,0,0,1,0,1
        1,1,1,1,1,1,1]);
elseif mapnum==3
    blk=uint8([  % 25 blanks, 136,336 nodes
        %18 move optimal answer, 1  3  1  4  1  1  4  2  4  4  3  2  2  2  1  4  4  4
         1 1 1 1 1 1 1 1 1;
         1 1 1 0 1 0 1 1 1;
         1 1 1 0 0 0 1 1 1;
         1 0 0 1 0 1 0 0 1;
         1 1 0 0 0 0 0 1 1;
         1 0 0 1 0 1 0 0 1;
         1 1 1 0 0 0 1 1 1;
         1 1 1 0 1 0 1 1 1;
         1 1 1 1 1 1 1 1 1;
        ]);
elseif mapnum==4
    blk=uint8([   %Loops, takes a LONG time: 37 blanks, > 4591000 nodes, 201986.5528s
        1 1 1 1 1 1 1 1 1 1 1;
        1 1 1 1 0 0 0 1 1 1 1;
        1 1 1 1 0 1 0 1 1 1 1;
        1 1 1 1 0 0 0 1 1 1 1;
        1 0 0 0 1 0 1 0 0 0 1;
        1 0 1 0 0 0 0 0 1 0 1;
        1 0 0 0 1 0 1 0 0 0 1;
        1 1 1 1 0 0 0 1 1 1 1;
        1 1 1 1 0 1 0 1 1 1 1;
        1 1 1 1 0 0 0 1 1 1 1;
        1 1 1 1 1 1 1 1 1 1 1;
        ]);
elseif mapnum==5
    blk=uint8([   %2 Loops, 24 blanks, > ???? nodes
        1 1 1 1 1 1 1 1 1 1 1;
        1 1 1 1 0 0 0 1 1 1 1;
        1 0 0 0 1 0 1 0 0 0 1;
        1 0 1 0 0 0 0 0 1 0 1;
        1 0 0 0 1 0 1 0 0 0 1;
        1 1 1 1 1 1 1 1 1 1 1;
        ]);
 elseif mapnum==6
    blk=uint8([   %2 Loops, 26 blanks, 347S, 207,651 NODES, 16mv path, 4  1  4  2  4  1  4  1  3  1  1  1  1  3  1  1
        1 1 1 1 1 1 1 1 1 1 1;
        1 1 1 1 0 1 0 1 1 1 1;
        1 1 1 1 0 0 0 1 1 1 1;
        1 0 0 0 1 0 1 0 0 0 1;
        1 0 1 0 0 0 0 0 1 0 1;
        1 0 0 0 1 0 1 0 0 0 1;
        1 1 1 1 1 1 1 1 1 1 1;
        ]);  
    elseif mapnum==7
    blk=uint8([   %2 Loops, 27 blanks, 347S, 207,651 NODES, 16mv path, 4  1  4  2  4  1  4  1  3  1  1  1  1  3  1  1
        1 1 1 1 1 1 1 1 1 1 1;
        1 1 1 1 0 1 0 1 1 1 1;
        1 1 1 1 0 0 0 1 1 1 1;
        1 0 0 0 1 0 1 0 0 0 1;
        1 0 1 0 0 0 0 0 1 0 1;
        1 0 0 0 1 0 1 0 0 0 1;
        1 1 1 1 1 0 1 1 1 1 1;
        1 1 1 1 1 1 1 1 1 1 1;
        ]); 
        elseif mapnum==8
    blk=uint8([   %2 Loops, 28 blanks, 347S, 207,651 NODES, 16mv path, 4  1  4  2  4  1  4  1  3  1  1  1  1  3  1  1
        1 1 1 1 1 1 1 1 1 1 1;
        1 1 1 1 0 1 0 1 1 1 1;
        1 1 1 1 0 0 0 1 1 1 1;
        1 0 0 0 1 0 1 0 0 0 1;
        1 0 1 0 0 0 0 0 1 0 1;
        1 0 0 0 1 0 1 0 0 0 1;
        1 1 1 1 0 0 1 1 1 1 1;
        1 1 1 1 1 1 1 1 1 1 1;
        1 1 1 1 1 1 1 1 1 1 1;
        ]); 
     elseif mapnum==9
    blk=uint8([   %2 Loops, 29 blanks, 347S, 207,651 NODES, 16mv path, 4  1  4  2  4  1  4  1  3  1  1  1  1  3  1  1
        1 1 1 1 1 1 1 1 1 1 1;
        1 1 1 1 0 1 0 1 1 1 1;
        1 1 1 1 0 0 0 1 1 1 1;
        1 0 0 0 1 0 1 0 0 0 1;
        1 0 1 0 0 0 0 0 1 0 1;
        1 0 0 0 1 0 1 0 0 0 1;
        1 1 1 1 0 0 1 1 1 1 1;
        1 1 1 1 0 1 1 1 1 1 1;
        1 1 1 1 1 1 1 1 1 1 1;
        ]); 
    elseif mapnum==10
    blk=uint8([   %2 Loops, 30 blanks, 347S, 207,651 NODES, 16mv path, 4  1  4  2  4  1  4  1  3  1  1  1  1  3  1  1
        1 1 1 1 1 1 1 1 1 1 1;
        1 1 1 1 0 1 0 1 1 1 1;
        1 1 1 1 0 0 0 1 1 1 1;
        1 0 0 0 1 0 1 0 0 0 1;
        1 0 1 0 0 0 0 0 1 0 1;
        1 0 0 0 1 0 1 0 0 0 1;
        1 1 1 1 0 0 1 1 1 1 1;
        1 1 1 1 0 1 1 1 1 1 1;
        1 1 1 1 0 1 1 1 1 1 1;
        1 1 1 1 1 1 1 1 1 1 1;
        ]);
    elseif mapnum==11
    blk=uint8([   %2 Loops, 31 blanks, 347S, 207,651 NODES, 16mv path, 4  1  4  2  4  1  4  1  3  1  1  1  1  3  1  1
        1 1 1 1 1 1 1 1 1 1 1;
        1 1 1 1 0 1 0 1 1 1 1;
        1 1 1 1 0 0 0 1 1 1 1;
        1 0 0 0 1 0 1 0 0 0 1;
        1 0 1 0 0 0 0 0 1 0 1;
        1 0 0 0 1 0 1 0 0 0 1;
        1 1 1 1 0 0 1 1 1 1 1;
        1 1 1 1 0 1 1 1 1 1 1;
        1 1 1 1 0 0 1 1 1 1 1;
        1 1 1 1 1 1 1 1 1 1 1;
        ]); 
    
    elseif mapnum==12
    blk=uint8([   %2 Loops, 47 blanks,   
        1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1;
        1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1;
        1 1 1 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1;
        1 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 1;
        1 1 0 0 0 0 0 1 1 1 0 0 0 0 0 1 1 1;
        1 1 0 1 1 1 0 1 1 1 0 1 0 1 0 1 1 1;
        1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 1;
        1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 1;
        1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1;
        ]); 
    elseif mapnum==13
    blk=uint8([   %2 Loops, 47 blanks,   
        1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1;
        1 1 0 0 0 1 1 1 0 1 1 1 0 0 0 0 0 1;
        1 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 0 1;
        1 0 1 1 0 1 1 0 1 1 1 1 0 1 1 0 0 1;
        1 0 0 0 0 0 0 0 1 1 0 0 0 0 0 1 0 1;
        1 1 0 1 1 1 0 1 1 1 0 1 0 1 0 1 1 1;
        1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 1;
        1 0 1 0 1 0 1 0 0 0 1 0 1 0 1 0 1 1;
        1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1;
        ]); 
    elseif mapnum==14
    blk=uint8([  % 20 blanks,? nodes
        %18 move optimal answer, 
         1 1 1 1 1 1 1 1 1;
         1 1 1 0 1 0 1 1 1;
         1 1 1 0 0 0 1 1 1;
         1 0 0 1 0 1 0 0 1;
         1 1 0 0 0 0 0 1 1;
         1 0 0 1 0 1 0 0 1;
         1 1 1 1 1 1 1 1 1;
         1 1 1 1 1 1 1 1 1;
         1 1 1 1 1 1 1 1 1;
        ]);
        elseif mapnum==15
    blk=uint8([  % 21 blanks,? nodes
        %18 move optimal answer, 
         1 1 1 1 1 1 1 1 1;
         1 1 1 0 1 0 1 1 1;
         1 1 1 0 0 0 1 1 1;
         1 0 0 1 0 1 0 0 1;
         1 1 0 0 0 0 0 1 1;
         1 0 0 1 0 1 0 0 1;
         1 1 1 1 0 1 1 1 1;
         1 1 1 1 1 1 1 1 1;
         1 1 1 1 1 1 1 1 1;
        ]);
    elseif mapnum==16
    blk=uint8([  % 22 blanks,? nodes
        %18 move optimal answer, 
         1 1 1 1 1 1 1 1 1;
         1 1 1 0 1 0 1 1 1;
         1 1 1 0 0 0 1 1 1;
         1 0 0 1 0 1 0 0 1;
         1 1 0 0 0 0 0 1 1;
         1 0 0 1 0 1 0 0 1;
         1 1 1 0 0 1 1 1 1;
         1 1 1 1 1 1 1 1 1;
         1 1 1 1 1 1 1 1 1;
        ]);
    elseif mapnum==17
    blk=uint8([  % 23 blanks,? nodes
        %18 move optimal answer, 
         1 1 1 1 1 1 1 1 1;
         1 1 1 0 1 0 1 1 1;
         1 1 1 0 0 0 1 1 1;
         1 0 0 1 0 1 0 0 1;
         1 1 0 0 0 0 0 1 1;
         1 0 0 1 0 1 0 0 1;
         1 1 1 0 0 1 1 1 1;
         1 1 1 0 1 1 1 1 1;
         1 1 1 1 1 1 1 1 1;
        ]);
    elseif mapnum==18
    blk=uint8([1,1,1,1,1,1,1 %19 blanks,?nodes
        1,0,1,0,0,0,1
        1,0,0,0,0,0,1
        1,0,0,1,0,0,1
        1,1,0,1,0,0,1
        1,1,0,0,1,0,1
        1,1,1,1,1,1,1]);
    elseif mapnum==19
        blk=uint8([1,1,1,1,1,1,1 %15 blanks, 970 nodes
        1,0,0,0,0,1,1
        1,0,1,1,1,1,1
        1,0,0,0,0,1,1
        1,1,1,1,0,1,1
        1,0,0,0,0,0,1
        1,1,1,1,1,1,1]);
    elseif mapnum==20
        blk=uint8([1,1,1,1,1,1,1 %16 blanks, 970 nodes
        1,0,0,0,0,0,1
        1,0,1,1,1,1,1
        1,0,0,0,0,1,1
        1,1,1,1,0,1,1
        1,0,0,0,0,0,1
        1,1,1,1,1,1,1]);
    elseif mapnum==21
        blk=uint8([1,1,1,1,1,1,1 %17 blanks, 970 nodes
        1,0,0,0,0,0,1
        1,0,1,0,1,1,1
        1,0,0,0,0,1,1
        1,1,1,1,0,1,1
        1,0,0,0,0,0,1
        1,1,1,1,1,1,1]);
else
    blk=uint8([1,1,1,1,1,1,1,1,1,1,1
        1,0,1,0,1,1,0,0,0,0,1
        1,0,0,0,0,0,0,0,0,0,1
        1,1,0,1,0,1,0,0,0,0,1
        1,1,0,0,0,1,0,0,0,0,1
        1,1,1,0,1,0,0,0,0,1,1
        1,1,0,0,0,0,0,0,0,0,1
        1,0,0,0,0,1,1,1,0,0,1
        1,1,0,0,0,0,0,0,0,0,1
        1,0,0,0,0,0,0,0,1,0,1
        1,1,1,1,1,1,1,1,1,1,1]);
end
blk = flipud(blk);
end


% [   %2 Loops, 26 blanks, > ???? nodes
%     1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1;
%     1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1;
%     1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1;
%     1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1;
%     1 0 0 0 1 0 1 0 0 0 1 1 1 1 1 1 1 1 1;
%     1 0 1 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1;
%     1 0 0 0 1 0 1 0 0 0 1 1 1 1 1 1 1 1 1;
%     1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1;
%     1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1;
%     1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1;
%     1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1;
%     1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1;
%     ]);    